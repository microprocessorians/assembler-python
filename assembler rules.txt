Rules:
1- all keywords are case sensitive (instructions are written in small letters)

3- registers or immediate values must be seperated by commas(,)

4- comments are made by semicolon(;)

6- labels are made by adding colon(:) 

7- The following are the registers available
	_________________________________
	|	R0	|	R8	|
	---------------------------------
	|	R1	|	R9	|
	---------------------------------
	|	R2	|	R10	|
	---------------------------------
	|	R3	|	R11	|
	---------------------------------
	|	R4	|	R12	|
	---------------------------------
	|	R5	|	R13	|
	---------------------------------
	|	R6	|	R14	|
	---------------------------------
	|	R7	|	R15	|
	---------------------------------

8- The following are the instructions allowed and their meaning
	_________________________________________________________________________
	|	add			|	Rxx = Ryy + Rzz			|
	-------------------------------------------------------------------------
	|       subtract	        |	Rxx = Ryy - Rzz			|
	-------------------------------------------------------------------------
	|	multiply low		|	Rxx = Ryy(15->0) * Rzz(15->0)	|
	-------------------------------------------------------------------------
	|	multiply high    	|	Rxx = Ryy(31->16) $ Rzz(31->16) |
	-------------------------------------------------------------------------
	|	and 			|	Rxx = Ryy & Rzz			|
	-------------------------------------------------------------------------
	|	or 			|	Rxx = Ryy | Rzz			|
	-------------------------------------------------------------------------
	|	xor 			|	Rxx = Ryy ^ Rzz			|
	-------------------------------------------------------------------------
	|	xnor 			|	Rxx = Ryy # Rzz			|
	-------------------------------------------------------------------------
	|	addi 			|	Rxx = Ryy + IMM			|
	-------------------------------------------------------------------------
	|	subi 			|	Rxx = Ryy - IMM			|
	-------------------------------------------------------------------------
	|	multiply low i 		|	Rxx = Ryy(15->0) * IMM		|
	-------------------------------------------------------------------------
	|	multiply high i		|	Rxx = Ryy(31->16) * IMM	        |
	-------------------------------------------------------------------------
	|	andi 			|	Rxx = Ryy & IMM			|
	-------------------------------------------------------------------------
	|	ori 			|	Rxx = Ryy | IMM			|
	-------------------------------------------------------------------------
	|	xori 			|	Rxx = Ryy ^ IMM			|
	-------------------------------------------------------------------------
	|	xnori 			|	Rxx = Ryy ^* IMM		|
	-------------------------------------------------------------------------
	|	store 			|	[R+IMM] = R			|
	-------------------------------------------------------------------------
	|	load 		 	|	R = [R+IMM]			|
	-------------------------------------------------------------------------
	|	shl 			|	Rxx << Ryy 			|
	-------------------------------------------------------------------------
	|	shr 			|	Rxx >> Ryy 			|
	-------------------------------------------------------------------------	
	|	sar 			|	Rxx >>> Ryy  			|
	-------------------------------------------------------------------------
	|	push 			|	push Rxx			|
	-------------------------------------------------------------------------
	|	pop 			|	pop Rxx				|
	-------------------------------------------------------------------------
	|	be Rxx,Ryy,label	|	be Rxx,Ryy,label		|
	-------------------------------------------------------------------------
	|	bne Rxx,Ryy,label	|	bne Rxx,Ryy,label 		|
	-------------------------------------------------------------------------
	|	bg Rxx,Ryy,label	|	bg Rxx,Ryy,label		|
	-------------------------------------------------------------------------
	|	bge Rxx,Ryy,label	|	bge Rxx,Ryy,label		|
	-------------------------------------------------------------------------
	|	jump label		|	jump label			|
	-------------------------------------------------------------------------
	|	call label		|	call label			|
	-------------------------------------------------------------------------
	|	ret			|	ret				|
	-------------------------------------------------------------------------
	|	nop			|	nop				|
	-------------------------------------------------------------------------
	|	halt			|	halt				|
	-------------------------------------------------------------------------
	|Augmented expressions are allowed for alu insrtuctions either r-type	|
	|or I-type   Ex. R1 += R14						|
	-------------------------------------------------------------------------